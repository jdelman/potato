user www-data;
# daemon off;
worker_processes 4;

events {
  use epoll;
  accept_mutex on;
  worker_connections 1024;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;

  server_tokens off;
  disable_symlinks off;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  
  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  client_body_timeout 5;

  upstream app_server {
    server unix:/tmp/nginx.socket fail_timeout=0;
  }

  server {
    listen 443;
    server_name ;
    keepalive_timeout 5;
    client_max_body_size 4G;

    # ssl
    ssl on;
    ssl_certificate /app/ssl/jdelman_me.bundle.crt;
    ssl_certificate_key /app/ssl/jdelman_me.key;

    # Poodle proof
    ssl_session_timeout  10m;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:10m;
    # below disables all weak cyphers (from https://support.comodo.com/index.php?/Knowledgebase/Article/View/789/0/certificate-installation-nginx)
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    if ($http_host = 'www.jdelman.me') {
      return 301 https://jdelman.me$request_uri;
    }

    location ^~ /static/ {
      add_header Access-Control-Allow-Origin *;
      rewrite /(.+)\.[\d]+\.(css|js) /$1.$2 last;
      root /app/potato/potato;
      # default cache is one week
      expires 7d;
    }

    location / {
      add_header Access-Control-Allow-Origin *;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_redirect off;
      proxy_pass http://app_server;
    }
  }

  server {
    listen 80;
    server_name  _;
    if ($http_host = 'www.jdelman.me') {
      return 301 https://jdelman.me$request_uri;
    }
    return 301 https://$http_host$request_uri;
  }
}